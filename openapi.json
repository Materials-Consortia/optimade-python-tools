{
  "openapi": "3.0.2",
  "info": {
    "title": " OPTiMaDe API",
    "version": "0.9",
    "description": "The [Open Databases Integration for Materials Design (OPTiMaDe) consortium](http://http://www.optimade.org/) aims to make materials databases interoperational by developing a common REST API."
  },
  "paths": {
    "/structures": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimadeStructureResponseMany"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Structure"
        ],
        "summary": "Get Structures",
        "operationId": "get_structures_structures_get",
        "parameters": [
          {
            "description": "See [the full OPTiMaDe spec](https://github.com/Materials-Consortia/OPTiMaDe/blob/develop/optimade.md) for filter\nquery syntax.\n\nExample: `chemical_formula = \"Al\" OR (prototype_formula = \"AB\" AND elements HAS Si, Al, O)`.\n",
            "required": false,
            "schema": {
              "title": "Filter",
              "type": "string",
              "description": "See [the full OPTiMaDe spec](https://github.com/Materials-Consortia/OPTiMaDe/blob/develop/optimade.md) for filter\nquery syntax.\n\nExample: `chemical_formula = \"Al\" OR (prototype_formula = \"AB\" AND elements HAS Si, Al, O)`.\n"
            },
            "name": "filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Response_Format",
              "type": "string",
              "default": "jsonapi"
            },
            "name": "response_format",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Email_Address",
              "type": "string",
              "format": "email"
            },
            "name": "email_address",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Response_Limit",
              "minimum": 0.0,
              "type": "integer",
              "default": 500
            },
            "name": "response_limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Response_Fields",
              "type": "string"
            },
            "name": "response_fields",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Sort",
              "type": "string"
            },
            "name": "sort",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Page[Offset]",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "page[offset]",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Page[Limit]",
              "minimum": 0.0,
              "type": "integer",
              "default": 500
            },
            "name": "page[limit]",
            "in": "query"
          }
        ]
      }
    },
    "/info": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimadeInfoResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Structure"
        ],
        "summary": "Get Info",
        "operationId": "get_info_info_get",
        "parameters": [
          {
            "description": "See [the full OPTiMaDe spec](https://github.com/Materials-Consortia/OPTiMaDe/blob/develop/optimade.md) for filter\nquery syntax.\n\nExample: `chemical_formula = \"Al\" OR (prototype_formula = \"AB\" AND elements HAS Si, Al, O)`.\n",
            "required": false,
            "schema": {
              "title": "Filter",
              "type": "string",
              "description": "See [the full OPTiMaDe spec](https://github.com/Materials-Consortia/OPTiMaDe/blob/develop/optimade.md) for filter\nquery syntax.\n\nExample: `chemical_formula = \"Al\" OR (prototype_formula = \"AB\" AND elements HAS Si, Al, O)`.\n"
            },
            "name": "filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Response_Format",
              "type": "string",
              "default": "jsonapi"
            },
            "name": "response_format",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Email_Address",
              "type": "string",
              "format": "email"
            },
            "name": "email_address",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Response_Limit",
              "minimum": 0.0,
              "type": "integer",
              "default": 500
            },
            "name": "response_limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Response_Fields",
              "type": "string"
            },
            "name": "response_fields",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Sort",
              "type": "string"
            },
            "name": "sort",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Page[Offset]",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "page[offset]",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Page[Limit]",
              "minimum": 0.0,
              "type": "integer",
              "default": 500
            },
            "name": "page[limit]",
            "in": "query"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "StructureResourceAttributes": {
        "title": "StructureResourceAttributes",
        "required": [
          "local_id",
          "last_modified"
        ],
        "type": "object",
        "properties": {
          "local_id": {
            "title": "Local_Id",
            "type": "string"
          },
          "last_modified": {
            "title": "Last_Modified",
            "type": "string",
            "format": "date-time"
          },
          "immutable_id": {
            "title": "Immutable_Id",
            "type": "string"
          },
          "elements": {
            "title": "Elements",
            "type": "string"
          },
          "nelements": {
            "title": "Nelements",
            "type": "integer"
          },
          "chemical_formula": {
            "title": "Chemical_Formula",
            "type": "string"
          },
          "formula_prototype": {
            "title": "Formula_Prototype",
            "type": "string"
          }
        }
      },
      "Link": {
        "title": "Link",
        "required": [
          "href"
        ],
        "type": "object",
        "properties": {
          "href": {
            "title": "Href",
            "maxLength": 65536,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          },
          "meta": {
            "title": "Meta",
            "type": "object"
          }
        }
      },
      "Links": {
        "title": "Links",
        "type": "object",
        "properties": {
          "next": {
            "title": "Next",
            "anyOf": [
              {
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              },
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "base_url": {
            "title": "Base_Url",
            "anyOf": [
              {
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              },
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "OptimadeResponseMeta": {
        "title": "OptimadeResponseMeta",
        "required": [
          "query",
          "api_version",
          "time_stamp",
          "data_returned",
          "more_data_available",
          "provider"
        ],
        "type": "object",
        "properties": {
          "query": {
            "title": "OptimadeResponseMetaQuery",
            "required": [
              "representation"
            ],
            "type": "object",
            "properties": {
              "representation": {
                "title": "Representation",
                "description": "a string with the part of the URL that follows the base URL.",
                "type": "string"
              }
            },
            "description": "Information on the query that was requested."
          },
          "api_version": {
            "title": "Api_Version",
            "type": "string",
            "description": "a string containing the version of the API implementation, e.g. v0.9.5"
          },
          "time_stamp": {
            "title": "Time_Stamp",
            "type": "string",
            "description": "a string containing the date and time at which the query was exexcuted, in [ISO 8601](https://www.iso.org/standard/40874.html) format. Times MUST be time-zone aware (i.e. MUST NOT be local times), in one of the formats allowed by ISO 8601 (i.e. either be in UTC, and then end with a Z, or indicate explicitly the offset).",
            "format": "date-time"
          },
          "data_returned": {
            "title": "Data_Returned",
            "minimum": 0.0,
            "type": "integer",
            "description": "an integer containing the number of data objects returned for the query."
          },
          "more_data_available": {
            "title": "More_Data_Available",
            "type": "boolean",
            "description": "`false` if all data has been returned, and `true` if not."
          },
          "provider": {
            "title": "OptimadeProvider",
            "required": [
              "name",
              "description",
              "prefix"
            ],
            "type": "object",
            "properties": {
              "name": {
                "title": "Name",
                "description": "a short name for the database provider",
                "type": "string"
              },
              "description": {
                "title": "Description",
                "description": "a longer description of the database provider",
                "type": "string"
              },
              "prefix": {
                "title": "Prefix",
                "description": "database-provider-specific prefix as found in Appendix 1.",
                "type": "string"
              },
              "homepage": {
                "title": "Homepage",
                "description": "a [JSON API links object](http://jsonapi.org/format/1.0#document-links) pointing to homepage of the database provider, either directly as a string, or as a link object.",
                "anyOf": [
                  {
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  {
                    "title": "Link",
                    "type": "object",
                    "properties": {
                      "href": {
                        "title": "Href",
                        "minLength": 1,
                        "maxLength": 65536,
                        "type": "string",
                        "format": "uri"
                      },
                      "meta": {
                        "title": "Meta",
                        "type": "object"
                      }
                    },
                    "required": [
                      "href"
                    ]
                  }
                ]
              },
              "index_base_url": {
                "title": "Index_Base_Url",
                "description": "a [JSON API links object](http://jsonapi.org/format/1.0#document-links) pointing to the base URL for the `index` meta-database as specified in Appendix 1, either directly as a string, or as a link object.",
                "anyOf": [
                  {
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  {
                    "title": "Link",
                    "type": "object",
                    "properties": {
                      "href": {
                        "title": "Href",
                        "minLength": 1,
                        "maxLength": 65536,
                        "type": "string",
                        "format": "uri"
                      },
                      "meta": {
                        "title": "Meta",
                        "type": "object"
                      }
                    },
                    "required": [
                      "href"
                    ]
                  }
                ]
              }
            },
            "description": "Stores information on the database provider of the\n   implementation."
          },
          "data_available": {
            "title": "Data_Available",
            "type": "integer",
            "description": "an integer containing the total number of data objects available in the database"
          },
          "last_id": {
            "title": "Last_Id",
            "type": "string",
            "description": "a string containing the last ID returned"
          },
          "response_message": {
            "title": "Response_Message",
            "type": "string",
            "description": "response string from the server"
          }
        },
        "description": "A [JSON API meta member](https://jsonapi.org/format/1.0#document-meta)\nthat contains JSON API meta objects of non-standard\nmeta-information.\n\nOPTIONAL additional information global to the query that is not\nspecified in this document, MUST start with a\ndatabase-provider-specific prefix."
      },
      "BaseInfoAttributes": {
        "title": "BaseInfoAttributes",
        "required": [
          "api_version",
          "available_api_versions",
          "entry_types_by_format"
        ],
        "type": "object",
        "properties": {
          "api_version": {
            "title": "Api_Version",
            "type": "string"
          },
          "available_api_versions": {
            "title": "Available_Api_Versions",
            "type": "object",
            "additionalProperties": {
              "minLength": 1,
              "maxLength": 65536,
              "type": "string",
              "format": "uri"
            }
          },
          "entry_types_by_format": {
            "title": "Entry_Types_By_Format",
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "formats": {
            "title": "Formats",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              "json"
            ]
          },
          "available_endpoints": {
            "title": "Available_Endpoints",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              "structure",
              "all",
              "info"
            ]
          }
        }
      },
      "BaseInfoResource": {
        "title": "BaseInfoResource",
        "required": [
          "attributes"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "default": "/"
          },
          "type": {
            "title": "Type",
            "type": "string",
            "default": "info"
          },
          "attributes": {
            "$ref": "#/components/schemas/BaseInfoAttributes"
          }
        }
      },
      "OptimadeInfoResponse": {
        "title": "OptimadeInfoResponse",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "links": {
            "$ref": "#/components/schemas/Links"
          },
          "meta": {
            "$ref": "#/components/schemas/OptimadeResponseMeta"
          },
          "data": {
            "$ref": "#/components/schemas/BaseInfoResource"
          }
        }
      },
      "OptimadeProvider": {
        "title": "OptimadeProvider",
        "required": [
          "name",
          "description",
          "prefix"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "description": "a short name for the database provider"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "a longer description of the database provider"
          },
          "prefix": {
            "title": "Prefix",
            "type": "string",
            "description": "database-provider-specific prefix as found in Appendix 1."
          },
          "homepage": {
            "title": "Homepage",
            "anyOf": [
              {
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              },
              {
                "title": "Link",
                "type": "object",
                "properties": {
                  "href": {
                    "title": "Href",
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  "meta": {
                    "title": "Meta",
                    "type": "object"
                  }
                },
                "required": [
                  "href"
                ]
              }
            ],
            "description": "a [JSON API links object](http://jsonapi.org/format/1.0#document-links) pointing to homepage of the database provider, either directly as a string, or as a link object."
          },
          "index_base_url": {
            "title": "Index_Base_Url",
            "anyOf": [
              {
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              },
              {
                "title": "Link",
                "type": "object",
                "properties": {
                  "href": {
                    "title": "Href",
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  "meta": {
                    "title": "Meta",
                    "type": "object"
                  }
                },
                "required": [
                  "href"
                ]
              }
            ],
            "description": "a [JSON API links object](http://jsonapi.org/format/1.0#document-links) pointing to the base URL for the `index` meta-database as specified in Appendix 1, either directly as a string, or as a link object."
          }
        },
        "description": "Stores information on the database provider of the\n   implementation."
      },
      "OptimadeResponseMetaQuery": {
        "title": "OptimadeResponseMetaQuery",
        "required": [
          "representation"
        ],
        "type": "object",
        "properties": {
          "representation": {
            "title": "Representation",
            "type": "string",
            "description": "a string with the part of the URL that follows the base URL."
          }
        },
        "description": "Information on the query that was requested."
      },
      "StructureResource": {
        "title": "StructureResource",
        "required": [
          "id",
          "attributes"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "type": "string",
            "default": "structure"
          },
          "attributes": {
            "$ref": "#/components/schemas/StructureResourceAttributes"
          }
        }
      },
      "OptimadeStructureResponseMany": {
        "title": "OptimadeStructureResponseMany",
        "required": [
          "links",
          "meta",
          "data"
        ],
        "type": "object",
        "properties": {
          "links": {
            "$ref": "#/components/schemas/Links"
          },
          "meta": {
            "$ref": "#/components/schemas/OptimadeResponseMeta"
          },
          "data": {
            "title": "Data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StructureResource"
            }
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      }
    }
  }
}