name: Testing eager dependencies

on:
  pull_request:
  push:
    branches:
    - master

jobs:

  deps_eager:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        python-version: [3.6, 3.7, 3.8]

    services:
      mongo:
        image: mongo:4.2
        ports:
        - 27017:27017
      postgres:
        image: postgres:10
        env:
          POSTGRES_DB: test_django
          POSTGRES_PASSWORD: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
        - 5432:5432

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install latest versions of immediate dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools wheel
        # Install package clean with test dependencies followed by eager update install
        python -m pip install -r .github/workflows/requirements.txt
        pip install optimade-core/
        pip install optimade-server/
        pip install optimade-validator/
        pip install optimade-client/
        pip install -e .[testing]
        pip install -U --upgrade-strategy eager -r .github/workflows/requirements_eager.txt

    - name: Run tests on updated packages
      run: pytest -rs --cov=./optimade/ --cov-report=xml
      env:
        OPTIMADE_CI_FORCE_MONGO: 1

    - name: Run tests relevant for index meta-db (using `mongomock`)
      run: pytest -rs --cov=./optimade/ --cov-report=xml --cov-append tests/server/test_middleware.py tests/server/test_server_validation.py tests/server/test_config.py
      env:
        OPTIMADE_CI_FORCE_MONGO: 0

    - name: Install adapter conversion dependencies (eagerly)
      run: |
        pip install -U --upgrade-strategy eager -e optimade-client/[all]
        # AiiDA-specific
        reentry scan

    - name: Setup up environment for AiiDA
      env:
        AIIDA_TEST_BACKEND: django
      run: .github/aiida/setup_aiida.sh

    - name: Run previously skipped tests for adapter conversion
      run: pytest -rs --cov=./optimade/ --cov-report=xml --cov-append tests/adapters/
