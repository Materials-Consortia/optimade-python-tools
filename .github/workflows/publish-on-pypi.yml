name: Publish on PyPI

on: [push]
  # release:
  #   types:
  #   - published

jobs:

  publish:
    runs-on: ubuntu-latest
    if: github.repository == 'Materials-Consortia/optimade-python-tools'
    # if: github.repository == 'Materials-Consortia/optimade-python-tools' && startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade setuptools
        pip install -e .[dev]
        pip install -r requirements-docs.txt

    # - name: Check released tag
    #   env:
    #     GITHUB_SHA: ${{ github.sha }}
    #     GITHUB_REF: ${{ github.ref }}
    #   run: python .github/workflows/check_released_tag.py

    - name: Update version, generate changelog, and update 'master'
      uses: CasperWA/push-protected@master
      with:
        token: ${{ secrets.RELEASE_PAT_CASPER }}
        repository: ${{ github.repository }}
        branch: test_release
        changes: .github/workflows/update_changelog.sh

    - name: Build source distribution
      run: python ./setup.py sdist

    # - name: Publish package to PyPI
    #   uses: pypa/gh-action-pypi-publish@master
    #   with:
    #     user: __token__
    #     password: ${{ secrets.PYPI_PASSWORD }}

    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}

    - name: Push forward version tag
      if: env.push == 1
      run: |
        git push "https://${GITHUB_ACTOR}:${INPUT_GITHUB_TOKEN}@github.com/${REPOSITORY}.git" origin :refs/tags/${GITHUB_REF#refs/tags/}
        git tag -fa ${GITHUB_REF#refs/tags/} -m "Push release ${GITHUB_REF#refs/tags/} tag to new release commit"

    - name: Build
      run: mkdocs build

    # - name: Deploy
    #   uses: peaceiris/actions-gh-pages@v3
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     publish_branch: gh-pages
    #     publish_dir: ./site
