name: Publish on PyPI

on: [push]
  # release:
  #   types:
  #   - published

jobs:

  publish:
    runs-on: ubuntu-latest
    if: github.repository == 'Materials-Consortia/optimade-python-tools' && startsWith(github.ref, 'refs/tags/test_')
    # if: github.repository == 'Materials-Consortia/optimade-python-tools' && startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Test tag stuff
      run: |
        TAG_NAME=${{ github.ref }}
        TAG_MSG=$(git tag -n1000 --format="%(contents)" ${TAG_NAME#refs/tags/})
        echo "${TAG_MSG}"

    # - name: Install Python dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install --upgrade setuptools
    #     pip install -e .[all]

    # - name: Check released tag
    #   env:
    #     GITHUB_SHA: ${{ github.sha }}
    #     GITHUB_REF: ${{ github.ref }}
    #   run: python .github/workflows/check_released_tag.py

    # - name: Update version, generate changelog, and update 'master'
    #   uses: CasperWA/push-protected@master
    #   with:
    #     token: ${{ secrets.RELEASE_PAT_CASPER }}
    #     repository: ${{ github.repository }}
    #     branch: test_release
    #     changes: .github/workflows/update_changelog.sh

    # - name: Build source distribution
    #   run: python ./setup.py sdist

    # - name: Publish package to PyPI
    #   uses: pypa/gh-action-pypi-publish@master
    #   with:
    #     user: __token__
    #     password: ${{ secrets.PYPI_PASSWORD }}

    # - name: Update tag to latest commit
    #   run: |
    #     git config --local user.email "dev@optimade.org"
    #     git config --local user.name "OPTIMADE Developers"

    #     git fetch origin

    #     TAG_MSG=$(git tag -n1000 --format="%(contents)" ${GITHUB_REF#refs/tags/})
    #     git tag -f -m "${TAG_MSG}" ${GITHUB_REF#refs/tags/} origin/test_release
    #     git push -f --tags

    # - name: Build docs
    #   run: mkdocs build

    # - name: Deploy
    #   uses: peaceiris/actions-gh-pages@v3
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     publish_branch: gh-pages
    #     publish_dir: ./site
